name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GIT_COMMIT: ${{ github.sha }}


jobs:
  #snyk:
  #  runs-on: ubuntu-latest
  #  container: gradle:6-jdk11
  #
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v4
  #
  #    - name: Snyk Scan
  #      uses: snyk/actions/scan@master
  #      with:
  #        token: ${{ secrets.SNYK_TOKEN }}
  #
  #    - name: Snyk Gradle Scan
  #      uses: snyk/actions/gradle@master
  #      with:
  #        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run linting
        uses: super-linter/super-linter/slim@v5
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_JAVA: false # Linter is very picky
          VALIDATE_BASH: false # Linter is very picky

  build:
    #needs: [ lint ] # Linter is very picky
    runs-on: ubuntu-latest
    container: gradle:8.5-jdk21
    outputs:
        APP_VERSION: ${{ steps.extract_version.outputs.APP_VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload Code Artifact
        uses: actions/upload-artifact@v4
        with:
          name: code
          path: .

      - name: Run build
        run: gradle build -p app

      - name: Upload Build Directory
        uses: actions/upload-artifact@v4
        with:
          name: build-dir
          path: ./app/build

      - name: Upload Dockerfile
        uses: actions/upload-artifact@v4
        with:
          name: Dockerfile
          path: ./app/Dockerfile

      - name: Extract app version
        id: extract_version
        run: |
          app_version=$(grep '^version=' "./app/gradle.properties" | cut -d'=' -f2)
          echo "App Version: ${app_version}"
          echo "APP_VERSION=${app_version}" >> "$GITHUB_OUTPUT"

  test:
    needs: [ build ]
    runs-on: ubuntu-latest
    container: gradle:8.5-jdk21

    steps:
      - name: Download Code Artifact
        uses: actions/download-artifact@v4
        with:
          name: code

      - name: Run Tests
        run: gradle test -p app


  sonar-cloud:
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - name: Download Code Artifact
        uses: actions/download-artifact@v4
        with:
          name: code

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker:
    needs: [ build, test, sonar-cloud ]
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Download Build Directory
        uses: actions/download-artifact@v4
        with:
          name: build-dir

      - name: Download Dockerfile
        uses: actions/download-artifact@v4
        with:
          name: Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Dockerhub Tag
        run: |
          app_version="${{ needs.build.outputs.APP_VERSION }}"
          dockerhub_tag="${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_PROJECT }}:${app_version}"
          echo "Dockerhub Tag: ${dockerhub_tag}"
          echo "DOCKERHUB_TAG=${dockerhub_tag}" >> "$GITHUB_ENV"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.DOCKERHUB_TAG }}
          build-args: |
            GIT_COMMIT=${{ env.GIT_COMMIT }}

      